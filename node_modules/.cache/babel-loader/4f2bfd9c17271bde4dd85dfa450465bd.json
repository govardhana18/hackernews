{"ast":null,"code":"var _jsxFileName = \"/Library/WebServer/Documents/React/hackernews/src/containers/Details.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { BreadCrumb } from '../components/BreadCrumb';\nimport { BackBtn } from '../components/actions/BackBtn';\nimport { StoryCard } from '../components/cards/StoryCard';\nimport { Heading } from '../components/Heading';\nimport { Loader } from '../components/actions/Loader';\nimport { AlertCard } from '../components/cards/AlertCard';\nimport { CommentCard } from '../components/cards/CommentCard';\nimport { getStory } from '../services';\nimport * as constants from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Details = () => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [story, setStory] = useState({});\n  const [commentIds, setCommentIds] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    getStory(id).then(data => {\n      setStory(data);\n      setCommentIds(data.kids.slice(0, constants.MAX_COMMENTS));\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n      console.log(\"failed to get commentIds\");\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    role: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [loading === true ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(BackBtn, {\n            timestamp: story.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(BreadCrumb, {\n            id: story.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StoryCard, {\n            story: story\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Heading, {\n          heading: \"Comments (\" + commentIds.length + \")\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), loading === true ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this) : commentIds.length === 0 ? /*#__PURE__*/_jsxDEV(AlertCard, {\n          alert: \"No comments found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12\n            },\n            children: commentIds.map(kid => /*#__PURE__*/_jsxDEV(CommentCard, {\n              kidId: kid\n            }, kid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 56\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Details, \"ZMTVPK/Wo5zckGNaFavYKZYLD6o=\", false, function () {\n  return [useParams];\n});\n\n_c = Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Library/WebServer/Documents/React/hackernews/src/containers/Details.jsx"],"names":["useEffect","useState","useParams","BreadCrumb","BackBtn","StoryCard","Heading","Loader","AlertCard","CommentCard","getStory","constants","Details","id","story","setStory","commentIds","setCommentIds","loading","setLoading","window","scrollTo","then","data","kids","slice","MAX_COMMENTS","catch","err","console","log","time","length","fontSize","map","kid","marginBottom"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { BreadCrumb } from '../components/BreadCrumb';\nimport { BackBtn } from '../components/actions/BackBtn';\nimport { StoryCard } from '../components/cards/StoryCard';\nimport { Heading } from '../components/Heading';\nimport { Loader } from '../components/actions/Loader';\nimport { AlertCard } from '../components/cards/AlertCard';\nimport { CommentCard } from '../components/cards/CommentCard';\nimport { getStory } from '../services';\nimport * as constants from '../constants';\n\nexport const Details = () => {\n    let { id } = useParams();\n    const [story, setStory] = useState({});\n    const [commentIds, setCommentIds] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        getStory(id).then(data=>{\n            setStory(data);\n            setCommentIds(data.kids.slice(0,constants.MAX_COMMENTS));\n            setLoading(false);\n        }).catch(err=>{\n            setLoading(false);\n            console.log(\"failed to get commentIds\");\n        })\n    }, [id])\n\n    return (\n        <main role=\"main\">\n            <div className=\"container\">\n                \n                <div>\n                    {loading === true?\n                    <Loader/>\n                    :<>\n                        <BackBtn timestamp={story.time}/>\n                        <hr/>\n                        <BreadCrumb id={story.id}/>\n                        <StoryCard story={story}/>\n                    </>\n                    } \n\n                    <Heading heading={\"Comments (\"+commentIds.length+\")\"}/>\n                    {loading === true?\n                        <Loader/>\n                    : \n                        commentIds.length === 0 ?\n                            <AlertCard alert=\"No comments found.\"/>\n                        :\n                        <> \n                            <div style={{fontSize: 12}}>\n                                {commentIds.map(kid => <CommentCard key={kid} kidId={kid}/>)}\n                            </div>\n                        </>\n                    }\n                </div>\n                <div style={{marginBottom:100}}></div>\n            </div>\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}