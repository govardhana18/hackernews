{"ast":null,"code":"var _jsxFileName = \"/Library/WebServer/Documents/React/hackernews/src/components/cards/CommentCard.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { getComment } from '../../services';\nimport { timestampToDt } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CommentCard = ({\n  kidId\n}) => {\n  _s();\n\n  const [comment, setComment] = useState({});\n  useEffect(() => {\n    getComment(kidId).then(data => {\n      setComment(data);\n    }).catch(err => {\n      console.log(\"failed to get comment\");\n    });\n  }, [kidId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: comment === null ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-group \",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button \",\n          className: \"list-group-item list-group-item-action \",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [comment.by, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 92\n          }, this), comment.text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 127\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              float: \"right\",\n              marginBottom: 0\n            },\n            children: timestampToDt(comment.time)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(CommentCard, \"Kgyk4KhgLlP7xD6poghq2ZQk0Xg=\");\n\n_c = CommentCard;\nCommentCard.propTypes = {\n  kidId: PropTypes.number\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentCard\");","map":{"version":3,"sources":["/Library/WebServer/Documents/React/hackernews/src/components/cards/CommentCard.jsx"],"names":["useEffect","useState","PropTypes","getComment","timestampToDt","CommentCard","kidId","comment","setComment","then","data","catch","err","console","log","by","text","float","marginBottom","time","propTypes","number"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,aAAT,QAA8B,aAA9B;;;AAGA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,UAAU,CAACG,KAAD,CAAV,CAAkBG,IAAlB,CAAuBC,IAAI,IAAE;AACzBF,MAAAA,UAAU,CAACE,IAAD,CAAV;AACH,KAFD,EAEGC,KAFH,CAESC,GAAG,IAAE;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH,KAJD;AAKH,GANQ,EAMN,CAACR,KAAD,CANM,CAAT;AAQA,sBACI;AAAA,cACKC,OAAO,KAAK,IAAZ,GACD,IADC,gBAGD;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,SAAS,EAAC,yCAAjC;AAAA,kCAA2E;AAAA,uBAAIA,OAAO,CAACQ,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA3E,EAAiGR,OAAO,CAACS,IAAzG,eAA8G;AAAA;AAAA;AAAA;AAAA,kBAA9G,eACI;AAAG,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAC,OAAP;AAAeC,cAAAA,YAAY,EAAC;AAA5B,aAAV;AAAA,sBAA2Cd,aAAa,CAACG,OAAO,CAACY,IAAT;AAAxD;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAMA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAJJ,mBADJ;AAgBH,CA1BM;;GAAMd,W;;KAAAA,W;AA4BbA,WAAW,CAACe,SAAZ,GAAwB;AACpBd,EAAAA,KAAK,EAAEJ,SAAS,CAACmB;AADG,CAAxB","sourcesContent":["import { useEffect, useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { getComment } from '../../services';\nimport { timestampToDt } from '../../utils'\n\n\nexport const CommentCard = ({kidId}) => {\n    const [comment, setComment] = useState({});\n    useEffect(() => {\n        getComment(kidId).then(data=>{\n            setComment(data);\n        }).catch(err=>{\n            console.log(\"failed to get comment\");\n        })\n    }, [kidId])\n\n    return (\n        <>\n            {comment === null?\n            null\n            : \n            <>\n            <div className=\"list-group \">\n                <button type=\"button \" className=\"list-group-item list-group-item-action \"><b>{comment.by}: </b>{comment.text}<br/> \n                    <p style={{float:\"right\",marginBottom:0}}>{timestampToDt(comment.time)}</p>\n                </button>\n            </div>\n            <br/>\n            </>\n            }\n        </> \n    )\n}\n\nCommentCard.propTypes = {\n    kidId: PropTypes.number\n}"]},"metadata":{},"sourceType":"module"}